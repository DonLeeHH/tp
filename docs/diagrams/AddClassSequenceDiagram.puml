@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddClassCommandParser" as AddClassCommandParser LOGIC_COLOR
participant "ac:AddClassCommand" as AddClassCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("addclass c/Sec2-Math-A t/Ms Lim")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("addclass c/Sec2-Math-A t/Ms Lim")
activate AddressBookParser

create AddClassCommandParser
AddressBookParser -> AddClassCommandParser
activate AddClassCommandParser

AddClassCommandParser --> AddressBookParser
deactivate AddClassCommandParser

AddressBookParser -> AddClassCommandParser : parse("c/Sec2-Math-A t/Ms Lim")
activate AddClassCommandParser

AddClassCommandParser -> AddClassCommandParser : tokenize arguments
AddClassCommandParser -> AddClassCommandParser : validate prefixes
AddClassCommandParser -> AddClassCommandParser : parse class name
AddClassCommandParser -> AddClassCommandParser : parse tutor name

create AddClassCommand
AddClassCommandParser -> AddClassCommand
activate AddClassCommand

AddClassCommand --> AddClassCommandParser :
deactivate AddClassCommand

AddClassCommandParser --> AddressBookParser : ac
deactivate AddClassCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
AddClassCommandParser -[hidden]-> AddressBookParser
destroy AddClassCommandParser

AddressBookParser --> LogicManager : ac
deactivate AddressBookParser

LogicManager -> AddClassCommand : execute(m)
activate AddClassCommand

AddClassCommand -> AddClassCommand : create ClassName
AddClassCommand -> AddClassCommand : findTutorByName(tutorName)
activate AddClassCommand

AddClassCommand -> Model : getAddressBook().getPersonList()
activate Model
Model --> AddClassCommand : persons
deactivate Model

AddClassCommand -> AddClassCommand : search for tutor
AddClassCommand -> AddClassCommand : validate tutor (not found/ambiguous)

AddClassCommand --> AddClassCommand
deactivate AddClassCommand

AddClassCommand -> AddClassCommand : create TuitionClass

AddClassCommand -> Model : hasClass(newClass)
activate Model
Model --> AddClassCommand : false
deactivate Model

AddClassCommand -> Model : addClass(newClass)
activate Model
Model --> AddClassCommand
deactivate Model

create CommandResult
AddClassCommand -> CommandResult
activate CommandResult

CommandResult --> AddClassCommand
deactivate CommandResult

AddClassCommand --> LogicManager : r
deactivate AddClassCommand

[<--LogicManager
deactivate LogicManager

note right of AddClassCommand
  Error handling paths:
  - Duplicate class: MESSAGE_DUPLICATE_CLASS
  - Tutor not found: MESSAGE_TUTOR_NOT_FOUND
  - Ambiguous tutor: MESSAGE_TUTOR_AMBIGUOUS
end note

note right of AddClassCommandParser
  Validates:
  - Required c/ prefix present
  - No invalid prefixes in class name
  - Optional t/ prefix for tutor
end note

@enduml
